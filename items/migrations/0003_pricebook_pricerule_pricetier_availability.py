# Generated by Django 5.2.1 on 2025-06-01 20:20

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        (
            "customers",
            "0003_designation_remove_customer_name_customer_first_name_and_more",
        ),
        ("items", "0002_item_created_by_item_updated_by"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="PriceBook",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "cities",
                    models.ManyToManyField(
                        help_text="Cities where this PriceBook is active.",
                        related_name="pricebooks",
                        to="customers.city",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        editable=False,
                        help_text="User who created this PriceBook",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="pricebooks_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        editable=False,
                        help_text="User who last modified this PriceBook",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="pricebooks_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Price Book",
                "verbose_name_plural": "Price Books",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="PriceRule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "base_price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="The base unit price if no tier thresholds are met.",
                        max_digits=12,
                    ),
                ),
                (
                    "unit_type",
                    models.CharField(
                        choices=[("per_uom", "Per UOM"), ("per_kw", "Per kW")],
                        default="per_uom",
                        help_text="Whether this rule is 'per_uom' or 'per_kw'.",
                        max_length=10,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        editable=False,
                        help_text="User who created this PriceRule",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="pricerules_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "item",
                    models.ForeignKey(
                        help_text="The Item (SKU) this rule prices.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="price_rules",
                        to="items.item",
                    ),
                ),
                (
                    "pricebook",
                    models.ForeignKey(
                        help_text="Which PriceBook this rule belongs to.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pricerules",
                        to="items.pricebook",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        editable=False,
                        help_text="User who last modified this PriceRule",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="pricerules_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Price Rule",
                "verbose_name_plural": "Price Rules",
                "ordering": ["pricebook", "item"],
                "unique_together": {("pricebook", "item")},
            },
        ),
        migrations.CreateModel(
            name="PriceTier",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "min_quantity",
                    models.PositiveIntegerField(
                        help_text="Inclusive minimum quantity for this tier."
                    ),
                ),
                (
                    "max_quantity",
                    models.PositiveIntegerField(
                        help_text="Inclusive maximum quantity for this tier."
                    ),
                ),
                (
                    "tier_price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Unit price to use when `min_quantity <= qty <= max_quantity`.",
                        max_digits=12,
                    ),
                ),
                (
                    "price_rule",
                    models.ForeignKey(
                        help_text="Which PriceRule this tier belongs to.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tiers",
                        to="items.pricerule",
                    ),
                ),
            ],
            options={
                "verbose_name": "Price Tier",
                "verbose_name_plural": "Price Tiers",
                "ordering": ["min_quantity"],
            },
        ),
        migrations.CreateModel(
            name="Availability",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_available", models.BooleanField(default=True)),
                (
                    "city",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="item_availabilities",
                        to="customers.city",
                    ),
                ),
                (
                    "item",
                    models.ForeignKey(
                        help_text="Which item is available/unavailable here.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="availabilities",
                        to="items.item",
                    ),
                ),
            ],
            options={
                "verbose_name": "Item Availability",
                "verbose_name_plural": "Item Availabilities",
                "unique_together": {("item", "city")},
            },
        ),
    ]
